!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var n=F[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,B),n.l=!0,n.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)B.d(U,n,function(F){return Q[F]}.bind(null,n));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=7)}([function(module,exports){eval('module.exports = "<!DOCTYPE html>\\n<html lang=\\"en\\">\\n<head>\\n  <meta charset=\\"UTF-8\\">\\n  <title>Youtube client</title>\\n</head>\\n<body>\\n</body>\\n</html>\\n";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguaHRtbD9iNTVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCFET0NUWVBFIGh0bWw+XFxuPGh0bWwgbGFuZz1cXFwiZW5cXFwiPlxcbjxoZWFkPlxcbiAgPG1ldGEgY2hhcnNldD1cXFwiVVRGLThcXFwiPlxcbiAgPHRpdGxlPllvdXR1YmUgY2xpZW50PC90aXRsZT5cXG48L2hlYWQ+XFxuPGJvZHk+XFxuPC9ib2R5PlxcbjwvaHRtbD5cXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuc2Nzcz8wMWJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2VhcmNoX3ZpZXcuc2Nzcz8xZWM4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcmVzdWx0c192aWV3LnNjc3M/ZWU5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2xpcF9pbmZvX3ZpZXcuc2Nzcz9mNjBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdG9vbHRpcF92aWV3LnNjc3M/NWNjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnaW5hdG9yX3ZpZXcuc2Nzcz9iN2Y2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/index.html\nvar src = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/style.scss\nvar style = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/search_view.scss\nvar search_view = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/search_view.js\n\nvar responseSearchDelegate = null;\nvar input = document.createElement('input');\nvar KEY = 'AIzaSyCj_bOMclR0cKwdGNhOXibb4b4yTFVJQhE';\n\nvar getQueryString = function getQueryString() {\n  return document.getElementById('search-text').value;\n};\n\nvar getClipsStatistic = function getClipsStatistic(args) {\n  return fetch(\"https://www.googleapis.com/youtube/v3/videos?key=\".concat(KEY, \"&id=\\n\").concat(args.join(','), \"&part=snippet,statistics\")).then(function (response) {\n    return response.json();\n  });\n};\n\nvar sendYouTubeQurery = function sendYouTubeQurery() {\n  var pageToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return fetch(\"https://www.googleapis.com/youtube/v3/search?key=\".concat(KEY, \"&\\n\").concat(pageToken ? \"pageToken=\".concat(pageToken, \"&\") : '&', \"type=video&part=snippet&maxResults=15&q=\").concat(getQueryString())).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.pageInfo.totalResults !== 0) {\n      var params = [];\n      var list = response.items;\n      var count = list.length;\n\n      for (var i = 0; i < count; i += 1) {\n        params.push(list[i].id.videoId);\n      }\n\n      return getClipsStatistic(params).then(function (statistic) {\n        return {\n          response: response,\n          statistic: statistic,\n          searchPageToken: pageToken\n        };\n      }).catch(function () {\n        return null;\n      });\n    }\n\n    return null;\n  });\n};\n\nvar onSubmit = function onSubmit(event) {\n  event.preventDefault();\n  input.blur();\n  document.body.style.zoom = '100%';\n  responseSearchDelegate(sendYouTubeQurery());\n};\n\nvar search_view_createView = function createView(responseSearch) {\n  responseSearchDelegate = responseSearch;\n  var searchContainer = document.createElement('div');\n  searchContainer.classList.add('search-container');\n  var form = document.createElement('form');\n  form.classList.add('search-form');\n  form.addEventListener('submit', onSubmit, false);\n  var label = document.createElement('label');\n  label.className = 'label-icon';\n  label.setAttribute('for', 'search-text');\n  label.innerHTML = '&#xf50d';\n  input.classList.add('search-field');\n  input.setAttribute('type', 'text');\n  input.setAttribute('id', 'search-text');\n  input.setAttribute('placeholder', 'Search');\n  input.setAttribute('aria-label', 'Search');\n  form.appendChild(label);\n  form.appendChild(input);\n  searchContainer.appendChild(form);\n  document.getElementById('app').appendChild(searchContainer);\n  input.focus();\n};\n\n/* harmony default export */ var src_search_view = ({\n  createView: search_view_createView,\n  sendYouTubeQurery: sendYouTubeQurery\n});\n// EXTERNAL MODULE: ./src/results_view.scss\nvar results_view = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/swipe.js\nvar swipe = function swipe(element, options) {\n  var settings = Object.assign({\n    minDist: 60,\n    maxDist: 120,\n    maxTime: 700,\n    minTime: 50\n  }, options);\n  if (settings.maxTime < settings.minTime) settings.maxTime = settings.minTime + 500;\n\n  if (settings.maxTime < 100 || settings.minTime < 50) {\n    settings.maxTime = 700;\n    settings.minTime = 50;\n  }\n\n  var el = element;\n  var dir;\n  var swipeType;\n  var dist;\n  var isMouse = false;\n  var isMouseDown = false;\n  var startX = 0;\n  var distX = 0;\n  var startY = 0;\n  var distY = 0;\n  var startTime = 0;\n  var support = {\n    pointer: !!('PointerEvent' in window || 'msPointerEnabled' in window.navigator),\n    touch: !!(typeof window.orientation !== 'undefined' || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || 'ontouchstart' in window || navigator.msMaxTouchPoints || 'maxTouchPoints' in window.navigator > 1 || 'msMaxTouchPoints' in window.navigator > 1)\n  };\n\n  var getSupportedEvents = function getSupportedEvents() {\n    var events;\n    var ie10;\n\n    switch (true) {\n      case support.touch:\n        events = {\n          type: 'touch',\n          start: 'touchstart',\n          move: 'touchmove',\n          end: 'touchend',\n          cancel: 'touchcancel'\n        };\n        break;\n\n      case support.pointer:\n        events = {\n          type: 'pointer',\n          start: 'PointerDown',\n          move: 'PointerMove',\n          end: 'PointerUp',\n          cancel: 'PointerCancel',\n          leave: 'PointerLeave'\n        };\n        ie10 = window.navigator.msPointerEnabled && document.documentMode === 10;\n        Object.keys(events).forEach(function (value) {\n          if (value !== 'type') {\n            events[value] = ie10 ? \"MS\".concat(events[value]) : events[value].toLowerCase();\n          }\n        });\n        break;\n\n      default:\n        events = {\n          type: 'mouse',\n          start: 'mousedown',\n          move: 'mousemove',\n          end: 'mouseup',\n          leave: 'mouseleave'\n        };\n        break;\n    }\n\n    return events;\n  };\n\n  var eventsUnify = function eventsUnify(e) {\n    return e.changedTouches ? e.changedTouches[0] : e;\n  };\n\n  var checkStart = function checkStart(e) {\n    var event = eventsUnify(e);\n    if (support.touch && typeof e.touches !== 'undefined' && e.touches.length !== 1) return;\n    dir = 'none';\n    swipeType = 'none';\n    dist = 0;\n    startX = event.pageX;\n    startY = event.pageY;\n    startTime = new Date().getTime();\n    if (isMouse) isMouseDown = true;\n  };\n\n  var checkMove = function checkMove(e) {\n    if (isMouse && !isMouseDown) return;\n    var event = eventsUnify(e);\n    distX = event.pageX - startX;\n    distY = event.pageY - startY;\n    if (Math.abs(distX) > Math.abs(distY)) dir = distX < 0 ? 'left' : 'right';else dir = distY < 0 ? 'up' : 'down';\n  };\n\n  var checkEnd = function checkEnd(e) {\n    if (isMouse && !isMouseDown) return;\n    var endTime = new Date().getTime();\n    var time = endTime - startTime;\n\n    if (Math.abs(distX) >= settings.minDist && Math.abs(distY) <= settings.maxDist) {\n      swipeType = dir;\n    } else if (Math.abs(distY) >= settings.minDist && Math.abs(distX) <= settings.maxDist) {\n      swipeType = dir;\n    }\n\n    dist = dir === 'left' || dir === 'right' ? Math.abs(distX) : Math.abs(distY);\n\n    if (swipeType !== 'none' && dist >= settings.minDist) {\n      var swipeEvent = new CustomEvent('swipe', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          full: e,\n          dir: swipeType,\n          dist: dist,\n          time: time\n        }\n      });\n      el.dispatchEvent(swipeEvent);\n    }\n  };\n\n  var events = getSupportedEvents();\n  if (support.pointer && !support.touch || events.type === 'mouse') isMouse = true;\n  el.addEventListener(events.start, checkStart, false);\n  el.addEventListener(events.move, checkMove, false);\n  el.addEventListener(events.end, checkEnd, false);\n};\n\n/* harmony default export */ var src_swipe = (swipe);\n// CONCATENATED MODULE: ./src/drag_helper.js\nvar dragItem;\nvar container;\nvar active = false;\nvar currentX;\nvar currentY;\nvar initialX;\nvar initialY;\nvar xOffset = 0;\nvar yOffset = 0;\nvar drag_helper_dragCallback = null;\nvar ignoredClassName = '';\n\nvar dragStart = function dragStart(e) {\n  if (e.target.className === ignoredClassName) return;\n\n  if (e.type === 'touchstart') {\n    initialX = e.touches[0].clientX - xOffset;\n    initialY = e.touches[0].clientY - yOffset;\n    active = true;\n  } else {\n    initialX = e.clientX - xOffset;\n    initialY = e.clientY - yOffset;\n    active = true;\n  }\n};\n\nvar dragEnd = function dragEnd() {\n  initialX = currentX;\n  initialY = currentY;\n  active = false;\n  xOffset = 0;\n  yOffset = 0;\n  dragItem.style.transform = \"translate3d(\".concat(0, \"px, \", 0, \"px, 0)\");\n};\n\nvar setTranslate = function setTranslate(xPos, yPos, el) {\n  var element = el;\n  element.style.transform = \"translate3d(\".concat(xPos, \"px, \", 0, \"px, 0)\");\n};\n\nvar drag = function drag(e) {\n  if (active) {\n    e.preventDefault();\n    if (drag_helper_dragCallback) drag_helper_dragCallback();\n\n    if (e.type === 'touchmove') {\n      currentX = e.touches[0].clientX - initialX;\n      currentY = e.touches[0].clientY - initialY;\n    } else {\n      currentX = e.clientX - initialX;\n      currentY = e.clientY - initialY;\n    }\n\n    xOffset = currentX;\n    yOffset = currentY;\n    setTranslate(currentX, currentY, dragItem);\n  }\n};\n\nvar setupEvents = function setupEvents() {\n  container.addEventListener('touchstart', dragStart, true);\n  container.addEventListener('touchend', dragEnd, true);\n  container.addEventListener('touchmove', drag, true);\n  container.addEventListener('mousedown', dragStart, true);\n  container.addEventListener('mouseup', dragEnd, true);\n  container.addEventListener('mousemove', drag, true);\n};\n\nvar setupDragItem = function setupDragItem(item) {\n  dragItem = item;\n  xOffset = 0;\n  yOffset = 0;\n};\n\nvar setupContainer = function setupContainer(c) {\n  container = c;\n  setupEvents();\n};\n\nvar setupDragCallback = function setupDragCallback(callback) {\n  drag_helper_dragCallback = callback;\n};\n\nvar setIgnoredClassName = function setIgnoredClassName(className) {\n  ignoredClassName = className;\n};\n\nvar drag_helper_dragAbort = function dragAbort() {\n  dragEnd();\n};\n\n/* harmony default export */ var drag_helper = ({\n  setupContainer: setupContainer,\n  setupDragItem: setupDragItem,\n  dragAbort: drag_helper_dragAbort,\n  setupDragCallback: setupDragCallback,\n  setIgnoredClassName: setIgnoredClassName\n});\n// EXTERNAL MODULE: ./src/clip_info_view.scss\nvar clip_info_view = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/clip_info_view.js\n\n\nvar createElement = function createElement(type, className) {\n  var el = document.createElement(type);\n  el.classList.add(className);\n  return el;\n};\n\nvar createIcon = function createIcon(code) {\n  var icon = createElement('span', 'icon');\n  icon.innerHTML = code;\n  return icon;\n};\n\nvar createStub = function createStub(size) {\n  return createElement('div', \"clip-stub\".concat(size));\n};\n\nvar clip_info_view_setClipData = function setClipData(clipView, info) {\n  var titleClip = clipView.querySelector('.title-clip');\n  var previewClip = clipView.querySelector('.preview-clip');\n  var author = clipView.querySelector('.author-clip');\n  var publicationDate = clipView.querySelector('.publication-date');\n  var viewRate = clipView.querySelector('.view-rate');\n  var descriptionClip = clipView.querySelector('.description-clip');\n  titleClip.innerText = info.titleClip;\n  titleClip.setAttribute('href', \"http://www.youtube.com/watch?v=\".concat(info.id));\n  previewClip.setAttribute('src', info.previewClip);\n  previewClip.setAttribute('alt', info.titleClip);\n  author.innerText = info.author;\n  publicationDate.innerText = info.publicationDate;\n  viewRate.innerText = info.viewRate;\n  descriptionClip.innerText = info.descriptionClip;\n};\n\nfunction clip_info_view_createView() {\n  var iconAuthor = createIcon('&#xe80a');\n  var iconPublicationDate = createIcon('&#xe80b');\n  var iconViewRate = createIcon('&#xe800');\n  var clipView = createElement('div', 'clip-info');\n  var titleClip = createElement('a', 'title-clip');\n  var previewClip = createElement('img', 'preview-clip');\n  var gridImageCaption = createElement('div', 'grid-image-caption');\n  var author = createElement('span', 'author-clip');\n  var publicationDate = createElement('span', 'publication-date');\n  var viewRate = createElement('span', 'view-rate');\n  var gridStatistic = createElement('div', 'grid-statistic');\n  var descriptionClip = createElement('p', 'description-clip');\n  var gridColumn = createElement('div', 'grid-column');\n  titleClip.setAttribute('target', '_blank');\n  previewClip.setAttribute('width', '320');\n  previewClip.setAttribute('height', '180');\n  gridImageCaption.appendChild(previewClip);\n  gridImageCaption.appendChild(titleClip);\n  gridStatistic.appendChild(iconAuthor);\n  gridStatistic.appendChild(author);\n  gridStatistic.appendChild(iconPublicationDate);\n  gridStatistic.appendChild(publicationDate);\n  gridStatistic.appendChild(iconViewRate);\n  gridStatistic.appendChild(viewRate);\n  gridColumn.appendChild(gridImageCaption);\n  gridColumn.appendChild(gridStatistic);\n  gridColumn.appendChild(descriptionClip);\n  clipView.appendChild(gridColumn);\n  return clipView;\n}\n\n/* harmony default export */ var src_clip_info_view = ({\n  createView: clip_info_view_createView,\n  createStub: createStub,\n  setClipData: clip_info_view_setClipData\n});\n// EXTERNAL MODULE: ./src/tooltip_view.scss\nvar tooltip_view = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/tooltip_view.js\n\nvar toolTip = document.createElement('div');\nvar toolTipMessage = document.createElement('span');\n\nvar tooltip_view_createView = function createView(parentView) {\n  toolTip.style.display = 'none';\n  toolTip.className = 'tooltip';\n  toolTip.appendChild(toolTipMessage);\n  parentView.appendChild(toolTip);\n};\n\nvar show = function show(e) {\n  var x;\n  var y;\n\n  if (e.type === 'touchstart') {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  var delta = e.type === 'touchstart' ? -40 : 0;\n  toolTip.style.display = 'block';\n  toolTip.style.left = \"\".concat(x - toolTip.offsetWidth / 2, \"px\");\n  toolTip.style.top = \"\".concat(y - toolTip.offsetHeight + delta, \"px\");\n};\n\nvar hide = function hide() {\n  toolTipMessage.innerText = '';\n  toolTip.style.display = 'none';\n};\n\nvar setMessage = function setMessage(message) {\n  toolTip.dataset.tooltip = message;\n};\n\n/* harmony default export */ var src_tooltip_view = ({\n  createView: tooltip_view_createView,\n  show: show,\n  hide: hide,\n  setMessage: setMessage\n});\n// CONCATENATED MODULE: ./src/results_view.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n\n\n\n\n\nvar resultsContainer = document.createElement('div');\nvar clipsContainer1 = document.createElement('div');\nvar clipsContainer2 = document.createElement('div');\nvar fromClipId = 0;\nvar viewClipCount = 0;\nvar clipsData = null;\nvar currentClipContainer = clipsContainer1;\nvar secondClipsContainer = clipsContainer2;\nvar results_view_getNextPageData = null;\nvar results_view_changedPageNumber = null;\nvar isSwipedNow = false;\nvar swipeStack = [];\nvar showToolTipTimeout;\nvar waitClearSwipeStack;\nvar resultsNotFoundDelegate;\nvar showStartPageDelegate;\nvar CLEAR_SWIPE_STACK = 0;\nvar TOOLTIP_TIMEOUT = 300;\nvar CLIP_INFO_WIDTH = 330;\nvar MAX_CLIP_COUNT = 4;\nvar CLIPS_TIMEOUT_FETCH = 300;\n\nvar formatDate = function formatDate(str) {\n  var d = new Date(str);\n  var m = d.getMonth() + 1;\n  var day = d.getDate();\n  return \"\".concat(d.getFullYear(), \"-\").concat((m < 10 ? '0' : '') + m, \"-\").concat((day < 10 ? '0' : '') + day);\n};\n\nvar AppendClipsData = function AppendClipsData(data) {\n  clipsData.clips = clipsData.clips.concat(data.response.items);\n  clipsData.stats = clipsData.stats.concat(data.statistic.items);\n  clipsData.nextPageToken = \"\".concat(data.response.nextPageToken);\n};\n\nvar getNextPageDataPromise = function getNextPageDataPromise(page) {\n  var oldClipsLength = clipsData.clips.length;\n  setTimeout(function () {\n    results_view_getNextPageData(clipsData.nextPageToken).then(function (data) {\n      AppendClipsData(data);\n    });\n  }, CLIPS_TIMEOUT_FETCH);\n  return new Promise(function (resolve, reject) {\n    if ((page + 1) * viewClipCount > clipsData.clips.length && (page + 1) * viewClipCount < clipsData.totalResults) {\n      results_view_getNextPageData(clipsData.nextPageToken).then(function (data) {\n        AppendClipsData(data);\n\n        if (oldClipsLength !== clipsData.clips.length) {\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    } else {\n      resolve();\n    }\n  });\n};\n\nvar makeBuffer = function makeBuffer(page) {\n  return getNextPageDataPromise(page);\n};\n\nvar results_view_setClipData = function setClipData(clipsContainer, itemInedex, info) {\n  var statistic = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  src_clip_info_view.setClipData(clipsContainer.querySelectorAll('.clip-info')[itemInedex], {\n    titleClip: info.snippet.title,\n    previewClip: info.snippet.thumbnails.medium.url,\n    descriptionClip: info.snippet.description,\n    author: info.snippet.channelTitle,\n    publicationDate: formatDate(info.snippet.publishedAt),\n    viewRate: statistic.viewCount,\n    id: info.id.videoId\n  });\n};\n\nvar fillContainer = function fillContainer(container) {\n  var toClipId = Math.min(fromClipId + viewClipCount, clipsData.clips.length, clipsData.totalResults);\n\n  for (var i = fromClipId; i < toClipId; i += 1) {\n    results_view_setClipData(container, i % viewClipCount, clipsData.clips[i], clipsData.stats[i].statistics);\n  }\n\n  for (var _i = 0; _i < viewClipCount; _i += 1) {\n    clipsContainer1.children[_i].style.display = _i < toClipId - fromClipId ? 'block' : 'none';\n    clipsContainer2.children[_i].style.display = _i < toClipId - fromClipId ? 'block' : 'none';\n  }\n};\n\nvar swapContainers = function swapContainers() {\n  currentClipContainer.style.display = 'none';\n  resultsContainer.removeChild(currentClipContainer);\n  resultsContainer.appendChild(currentClipContainer);\n  currentClipContainer = currentClipContainer === clipsContainer1 ? clipsContainer2 : clipsContainer1;\n  currentClipContainer.style.display = 'flex';\n};\n\nvar onFadeInLeftEnd = function onFadeInLeftEnd(e) {\n  e.target.classList.remove('fade-in-left');\n  e.target.removeEventListener('animationend', onFadeInLeftEnd);\n};\n\nvar onFadeInRightEnd = function onFadeInRightEnd(e) {\n  e.target.classList.remove('fade-in-right');\n  e.target.removeEventListener('animationend', onFadeInRightEnd);\n};\n\nvar dequeSwipeEvents = function dequeSwipeEvents() {\n  var e = swipeStack.pop();\n  setTimeout(function () {\n    return resultsContainer.dispatchEvent(e());\n  }, 500);\n};\n\nvar results_view_animationEnd = function animationEnd(e, removeListener, removeClass) {\n  e.target.classList.remove(removeClass);\n  e.target.removeEventListener('animationend', removeListener);\n  e.target.style.transform = \"translate3d(\".concat(0, \"px, \", 0, \"px, 0)\");\n  swapContainers();\n  isSwipedNow = false;\n\n  if (swipeStack.length !== 0) {\n    dequeSwipeEvents();\n  } else {\n    drag_helper.setupDragItem(currentClipContainer);\n  }\n};\n\nvar onBeginRightEnd = function onBeginRightEnd(e) {\n  results_view_animationEnd(e, onBeginRightEnd, 'begin-right');\n};\n\nvar onBeginLeftEnd = function onBeginLeftEnd(e) {\n  results_view_animationEnd(e, onBeginLeftEnd, 'begin-left');\n};\n\nvar results_view_swiper = function swiper(e) {\n  if (e.detail.dir === 'left' || e.detail.dir === 'right') {\n    secondClipsContainer = currentClipContainer === clipsContainer1 ? clipsContainer2 : clipsContainer1;\n    fillContainer(secondClipsContainer);\n    isSwipedNow = true;\n  }\n\n  switch (e.detail.dir) {\n    case 'left':\n      currentClipContainer.addEventListener('animationend', onFadeInLeftEnd);\n      currentClipContainer.classList.add('fade-in-left');\n      secondClipsContainer.addEventListener('animationend', onBeginRightEnd);\n      secondClipsContainer.classList.add('begin-right');\n      secondClipsContainer.style.display = 'flex';\n      break;\n\n    case 'right':\n      currentClipContainer.addEventListener('animationend', onFadeInRightEnd);\n      currentClipContainer.classList.add('fade-in-right');\n      secondClipsContainer.addEventListener('animationend', onBeginLeftEnd);\n      secondClipsContainer.classList.add('begin-left');\n      secondClipsContainer.style.display = 'flex';\n      break;\n\n    default:\n      break;\n  }\n\n  src_tooltip_view.setMessage(\"Page: \".concat(Math.floor(fromClipId / viewClipCount) + 1));\n};\n\nvar pullSwipe = function pullSwipe(e) {\n  swipeStack.push(e);\n};\n\nfunction saveEvent(e) {\n  return function () {\n    return e;\n  };\n}\n\nvar results_view_setupSwipe = function setupSwipe() {\n  src_swipe(resultsContainer, {\n    maxTime: 1000,\n    minTime: 100,\n    maxDist: 150,\n    minDist: 60\n  });\n  resultsContainer.addEventListener('swipe', function (e) {\n    if (fromClipId === 0 && e.detail.dir === 'right') return;\n    if (e.detail.dir !== 'left' && e.detail.dir !== 'right') return;\n    var offset = e.detail.dir === 'left' ? viewClipCount : -viewClipCount;\n    makeBuffer(Math.floor(Math.min(Math.max(fromClipId + offset, 0), clipsData.clips.length - 1 - viewClipCount) / viewClipCount)).then(function () {\n      if (isSwipedNow === true) {\n        pullSwipe(saveEvent(e));\n        return;\n      }\n\n      fromClipId = Math.min(Math.max(fromClipId + offset, 0), clipsData.clips.length - 1 - viewClipCount);\n      results_view_swiper(e);\n      results_view_changedPageNumber(Math.floor(fromClipId / viewClipCount));\n    }).catch(function () {});\n  });\n};\n\nvar onResizeWindow = function onResizeWindow(width) {\n  var oldViewClipCount = viewClipCount;\n  viewClipCount = Math.max(Math.min(Math.floor(width / CLIP_INFO_WIDTH), 4), 1);\n\n  if (oldViewClipCount !== viewClipCount) {\n    fromClipId = Math.floor(fromClipId / viewClipCount) * viewClipCount;\n    results_view_changedPageNumber(Math.floor(fromClipId / viewClipCount));\n    fillContainer(currentClipContainer);\n  }\n\n  for (var i = 0; i < MAX_CLIP_COUNT; i += 1) {\n    clipsContainer1.children[i].style.display = i < viewClipCount ? 'block' : 'none';\n    clipsContainer2.children[i].style.display = i < viewClipCount ? 'block' : 'none';\n  }\n};\n\nvar onMouseWheel = function onMouseWheel(e) {\n  var oldfromClipId = fromClipId;\n  var delta = e.deltaY || e.detail || e.wheelDelta;\n  var offset = delta > 0 ? viewClipCount : -viewClipCount;\n  makeBuffer(Math.floor(Math.min(Math.max(fromClipId + offset, 0), clipsData.clips.length - 1 - viewClipCount) / viewClipCount)).then(function () {\n    if (isSwipedNow === true) {\n      pullSwipe(saveEvent(e));\n      return;\n    }\n\n    fromClipId = Math.min(Math.max(fromClipId + offset, 0), clipsData.clips.length - 1 - viewClipCount);\n\n    if (oldfromClipId !== fromClipId) {\n      results_view_swiper({\n        detail: {\n          dir: oldfromClipId > fromClipId ? 'right' : 'left'\n        }\n      });\n      results_view_changedPageNumber(Math.floor(fromClipId / viewClipCount));\n    }\n  }).catch(function () {});\n};\n\nvar results_view_dragAbort = function dragAbort() {\n  drag_helper.dragAbort();\n  clearTimeout(showToolTipTimeout);\n  src_tooltip_view.hide();\n};\n\nvar results_view_onMouseDownOrTochStart = function onMouseDownOrTochStart(e) {\n  showToolTipTimeout = setTimeout(function () {\n    src_tooltip_view.setMessage(\"Page: \".concat(Math.floor(fromClipId / viewClipCount) + 1));\n    src_tooltip_view.show(e);\n  }, TOOLTIP_TIMEOUT);\n  waitClearSwipeStack = setTimeout(function () {\n    while (swipeStack.length > 0) {\n      swipeStack.pop();\n    }\n  }, CLEAR_SWIPE_STACK);\n};\n\nvar results_view_dragCallback = function dragCallback() {\n  src_tooltip_view.hide();\n  clearTimeout(showToolTipTimeout);\n  clearTimeout(waitClearSwipeStack);\n};\n\nvar results_view_createView = function createView(getNextPageDataFunction, changedPageNumberFunction, resultsNotFound, showStartPage) {\n  resultsNotFoundDelegate = resultsNotFound;\n  showStartPageDelegate = showStartPage;\n  results_view_changedPageNumber = changedPageNumberFunction;\n  results_view_getNextPageData = getNextPageDataFunction;\n  resultsContainer.classList.add('results-container');\n  clipsContainer1.classList.add('clips-container');\n  clipsContainer1.setAttribute('id', 'clips-container');\n  clipsContainer2.classList.add('clips-container');\n  clipsContainer2.setAttribute('id', 'clips-container');\n  clipsContainer2.style.display = 'none';\n  var temp = src_clip_info_view.createView();\n\n  for (var i = 0; i < MAX_CLIP_COUNT; i += 1) {\n    clipsContainer1.appendChild(temp.cloneNode(true));\n    clipsContainer2.appendChild(temp.cloneNode(true));\n  }\n\n  resultsContainer.appendChild(clipsContainer1);\n  resultsContainer.appendChild(clipsContainer2);\n  src_tooltip_view.createView(resultsContainer);\n  document.getElementById('app').appendChild(resultsContainer);\n  results_view_setupSwipe();\n  resultsContainer.addEventListener('wheel', onMouseWheel, true);\n  resultsContainer.addEventListener('mousedown', results_view_onMouseDownOrTochStart, true);\n  resultsContainer.addEventListener('touchstart', results_view_onMouseDownOrTochStart, true);\n  drag_helper.setupContainer(resultsContainer);\n  drag_helper.setupDragItem(currentClipContainer);\n  drag_helper.setupDragCallback(results_view_dragCallback);\n  drag_helper.setIgnoredClassName('title-clip');\n};\n\nvar checkWindowSize = function checkWindowSize() {\n  var w = window;\n  var d = document;\n  var e = d.documentElement;\n  var g = d.getElementsByTagName('body')[0];\n  var x = w.innerWidth || e.clientWidth || g.clientWidth;\n  onResizeWindow(x);\n};\n\nvar clearResults = function clearResults() {\n  clipsData = {\n    clips: [],\n    stats: [],\n    nextPageToken: '',\n    totalResults: 0\n  };\n  fromClipId = 0;\n};\n\nvar getResults = function getResults(results) {\n  results.then(function (data) {\n    showStartPageDelegate(false);\n\n    if (!data.searchPageToken) {\n      clipsData = {\n        clips: _toConsumableArray(data.response.items),\n        stats: _toConsumableArray(data.statistic.items),\n        nextPageToken: \"\".concat(data.response.nextPageToken),\n        totalResults: data.response.pageInfo.totalResults + 0\n      };\n      fromClipId = 0;\n      checkWindowSize();\n      results_view_changedPageNumber(0);\n      fillContainer(currentClipContainer);\n    } else {\n      AppendClipsData(data);\n    }\n  }).catch(function () {\n    resultsNotFoundDelegate();\n    showStartPageDelegate(true);\n  });\n};\n\nvar results_view_goToPage = function goToPage(number) {\n  if (isSwipedNow === true) return;\n  var oldfromClipId = fromClipId;\n  fromClipId = viewClipCount * number;\n\n  if (oldfromClipId < fromClipId) {\n    makeBuffer(Math.floor(fromClipId / viewClipCount)).then(function () {\n      if (oldfromClipId !== fromClipId) {\n        results_view_swiper({\n          detail: {\n            dir: oldfromClipId >= fromClipId ? 'right' : 'left'\n          }\n        });\n        results_view_changedPageNumber(Math.floor(fromClipId / viewClipCount));\n      }\n    }).catch(function () {});\n  } else if (oldfromClipId !== fromClipId) {\n    results_view_swiper({\n      detail: {\n        dir: oldfromClipId >= fromClipId ? 'right' : 'left'\n      }\n    });\n    results_view_changedPageNumber(Math.floor(fromClipId / viewClipCount));\n  }\n};\n\n/* harmony default export */ var src_results_view = ({\n  createView: results_view_createView,\n  getResults: getResults,\n  clearResults: clearResults,\n  onResizeWindow: onResizeWindow,\n  goToPage: results_view_goToPage,\n  dragAbort: results_view_dragAbort,\n  formatDate: formatDate\n});\n// EXTERNAL MODULE: ./src/paginator_view.scss\nvar paginator_view = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/paginator_view.js\n\nvar DOTS_COUNT = 5;\nvar paginator = document.createElement('div');\nvar idx = 0;\nvar goToPageDelegate = null;\n\nvar onClick = function onClick(e) {\n  if (e.target.classList.contains('paginator-item')) {\n    goToPageDelegate(+e.target.innerText - 1);\n  }\n};\n\nvar paginator_view_createView = function createView(goToPage) {\n  goToPageDelegate = goToPage;\n  var paginatorContainer = document.createElement('div');\n  paginatorContainer.classList.add('paginator-container');\n  paginator.classList.add('paginator');\n  paginator.addEventListener('click', onClick, false);\n\n  for (var i = 0; i < DOTS_COUNT; i += 1) {\n    var paginatorItem = document.createElement('button');\n    paginatorItem.classList.add('paginator-item');\n    paginatorItem.innerText = i + 1;\n    paginator.appendChild(paginatorItem);\n  }\n\n  paginatorContainer.appendChild(paginator);\n  document.getElementById('app').appendChild(paginatorContainer);\n};\n\nvar showPageNumber = function showPageNumber(number) {\n  paginator.children[idx].classList.remove('current');\n  idx = number >= DOTS_COUNT - 1 ? Math.floor((DOTS_COUNT - 1) / 2) : number % DOTS_COUNT;\n  paginator.children[idx].classList.add('current');\n\n  for (var i = 0; i < DOTS_COUNT; i += 1) {\n    paginator.children[i].innerText = number - idx + 1 + i;\n  }\n};\n\n/* harmony default export */ var src_paginator_view = ({\n  createView: paginator_view_createView,\n  showPageNumber: showPageNumber\n});\n// CONCATENATED MODULE: ./src/resize_helper.js\nvar optimizedResize = function optimizedResize() {\n  var callbacks = [];\n  var running = false;\n\n  var runCallbacks = function runCallbacks() {\n    callbacks.forEach(function (callback) {\n      callback();\n    });\n    running = false;\n  };\n\n  var resize = function resize() {\n    if (!running) {\n      running = true;\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(runCallbacks);\n      } else {\n        setTimeout(runCallbacks, 66);\n      }\n    }\n  };\n\n  var addCallbackInner = function addCallbackInner(callback) {\n    if (callback) {\n      callbacks.push(callback);\n    }\n  };\n\n  return {\n    add: function add(callback) {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n\n      addCallbackInner(callback);\n    }\n  };\n};\n\nvar addCallback = function addCallback(callback) {\n  optimizedResize().add(function () {\n    var w = window;\n    var d = document;\n    var e = d.documentElement;\n    var g = d.getElementsByTagName('body')[0];\n    var x = w.innerWidth || e.clientWidth || g.clientWidth;\n    var y = w.innerHeight || e.clientHeight || g.clientHeight;\n    callback(x, y);\n  });\n};\n\n/* harmony default export */ var resize_helper = ({\n  addCallback: addCallback\n});\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nvar isMessageShowed = false;\n\nvar hideMessage = function hideMessage() {\n  isMessageShowed = false;\n  var topMessage = document.body.querySelector('.top-message');\n\n  if (topMessage) {\n    document.body.removeChild(topMessage);\n  }\n};\n\nvar showMessage = function showMessage(message) {\n  if (isMessageShowed === true) return;\n  var appMessage = document.createElement('div');\n  appMessage.className = 'top-message';\n  var textMessage = document.createElement('p');\n  textMessage.innerText = message;\n  textMessage.classList.add('zoom-out');\n  textMessage.addEventListener('animationend', hideMessage, false);\n  appMessage.appendChild(textMessage);\n  document.body.appendChild(appMessage);\n  isMessageShowed = true;\n};\n\nvar initAppContainer = function initAppContainer() {\n  var scale = '1.0';\n  var meta = document.createElement('meta');\n  meta.setAttribute('name', 'viewport');\n  document.getElementsByTagName('head')[0].appendChild(meta);\n  document.querySelector('meta[name=viewport]').setAttribute('content', \"initial-scale=\".concat(scale));\n  var appContainer = document.createElement('div');\n  appContainer.setAttribute('id', 'app');\n  appContainer.className = 'app-container search-full';\n  document.body.appendChild(appContainer);\n  showMessage('Welcome to the Youtube client!');\n  return appContainer;\n};\n\nvar appContainer = initAppContainer();\n\nvar showStatPage = function showStatPage(show) {\n  if (!show) {\n    appContainer.className = 'app-container search-as-panel';\n  } else {\n    appContainer.className = 'app-container search-full';\n  }\n};\n\nvar src_resultsNotFound = function resultsNotFound() {\n  showMessage('Sorry, but nothing found...');\n};\n\nvar src_onMouseUpOrTochEnd = function onMouseUpOrTochEnd() {\n  return src_results_view.dragAbort();\n};\n\nvar src_goToPage = function goToPage(number) {\n  return src_results_view.goToPage(number);\n};\n\nvar src_getNextPageData = function getNextPageData(token) {\n  return src_search_view.sendYouTubeQurery(token);\n};\n\nvar src_changedPageNumber = function changedPageNumber(number) {\n  return src_paginator_view.showPageNumber(number);\n};\n\nvar src_resizeWindowCallback = function resizeWindowCallback(x, y) {\n  return src_results_view.onResizeWindow(x, y);\n};\n\nvar src_responseSearch = function responseSearch(result) {\n  src_results_view.getResults(result);\n};\n\nappContainer.addEventListener('mouseup', src_onMouseUpOrTochEnd, true);\nappContainer.addEventListener('touchend', src_onMouseUpOrTochEnd, true);\nsrc_search_view.createView(src_responseSearch);\nsrc_results_view.createView(src_getNextPageData, src_changedPageNumber, src_resultsNotFound, showStatPage);\nsrc_paginator_view.createView(src_goToPage);\nresize_helper.addCallback(src_resizeWindowCallback);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n")}]);